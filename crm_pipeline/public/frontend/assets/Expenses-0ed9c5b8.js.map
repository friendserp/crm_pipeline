{"version":3,"file":"Expenses-0ed9c5b8.js","sources":["../../../../frontend/src/pages/Expenses.vue"],"sourcesContent":["<template>\n  <div class=\"min-h-screen bg-[#233d48] p-6\">\n    <!-- Main Centered Container -->\n    <div class=\"max-w-6xl mx-auto\">\n      <!-- Header Section -->\n      <div class=\"mb-8\">\n        <h1 class=\"text-3xl font-bold text-white mb-2\">Payment Entries</h1>\n        <div class=\"text-gray-300 text-lg mb-4\">\n          <p>Manage your payments and receipts efficiently</p>\n        </div>\n      </div>\n\n      <!-- Search and Actions -->\n      <div class=\"bg-[#2a4a58] rounded-lg border border-[#2a4a58] p-4 mb-6\">\n        <div class=\"flex justify-between items-center\">\n          <div class=\"flex-1 max-w-md\">\n            <div class=\"relative\">\n              <input \n                type=\"text\" \n                v-model=\"searchQuery\"\n                placeholder=\"Search payments...\"\n                class=\"w-full px-4 py-2 pl-10 border border-[#2a4a58] rounded-lg focus:outline-none focus:ring-2 focus:ring-[#8acc33] focus:border-transparent bg-[#233d48] text-white\"\n              >\n              <svg class=\"absolute left-3 top-2.5 w-4 h-4 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\"></path>\n              </svg>\n            </div>\n          </div>\n          <div class=\"flex space-x-3\">\n            <button \n              @click=\"createNewPayment\"\n              class=\"px-4 py-2 bg-[#8acc33] hover:bg-[#7abc22] text-white font-medium rounded-lg transition-colors duration-200\"\n            >\n              New Payment\n            </button>\n            <button \n              @click=\"loadPaymentEntries\"\n              class=\"px-4 py-2 border border-[#8acc33] text-[#8acc33] bg-transparent hover:bg-[#2a4a58] font-medium rounded-lg transition-colors duration-200\"\n            >\n              Refresh\n            </button>\n          </div>\n        </div>\n      </div>\n\n      <!-- Payment Entries List -->\n      <div class=\"bg-[#2a4a58] rounded-lg border border-[#2a4a58] p-6\" v-if=\"filteredPayments.length > 0\">\n        <h3 class=\"text-xl font-semibold text-white mb-4\">Payment Entries</h3>\n        <div class=\"space-y-3\">\n          <div \n            v-for=\"payment in filteredPayments\" \n            :key=\"payment.name\"\n            class=\"bg-[#233d48] rounded-lg p-4 border border-[#2a4a58] cursor-pointer hover:border-[#8acc33] transition-colors\"\n            @click=\"viewPayment(payment)\"\n          >\n            <div class=\"flex justify-between items-center\">\n              <div class=\"flex-1\">\n                <div class=\"flex items-center space-x-4\">\n                  <div class=\"text-white font-semibold text-lg\">{{ payment.name }}</div>\n                  <span :class=\"statusBadgeClasses(payment.status)\" class=\"px-2 py-1 rounded-full text-xs font-medium\">\n                    {{ payment.status }}\n                  </span>\n                  <span :class=\"typeBadgeClasses(payment.payment_type)\" class=\"px-2 py-1 rounded-full text-xs font-medium\">\n                    {{ payment.payment_type }}\n                  </span>\n                </div>\n                <div class=\"text-gray-300 text-sm mt-2\">\n                  <div class=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n                    <div>\n                      <span class=\"text-gray-400\">Party:</span>\n                      <span class=\"ml-2\">{{ payment.party_name }}</span>\n                    </div>\n                    <div>\n                      <span class=\"text-gray-400\">Amount:</span>\n                      <span class=\"ml-2 text-[#8acc33] font-semibold\">{{ formatCurrency(payment.paid_amount) }}</span>\n                    </div>\n                    <div>\n                      <span class=\"text-gray-400\">Date:</span>\n                      <span class=\"ml-2\">{{ formatDate(payment.posting_date) }}</span>\n                    </div>\n                    <div>\n                      <span class=\"text-gray-400\">Company:</span>\n                      <span class=\"ml-2\">{{ payment.company }}</span>\n                    </div>\n                  </div>\n                </div>\n                <div class=\"text-gray-400 text-xs mt-2\">\n                  From: {{ payment.paid_from }} â†’ To: {{ payment.paid_to }}\n                </div>\n              </div>\n              <div class=\"text-right\">\n                <div class=\"text-[#8acc33] font-semibold text-lg\">{{ formatCurrency(payment.paid_amount) }}</div>\n                <div class=\"text-gray-400 text-sm\">{{ payment.party_type }}</div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <!-- Empty State -->\n      <div v-if=\"paymentEntries.length === 0\" class=\"text-center py-12\">\n        <div class=\"text-gray-400 mb-4\">\n          <svg class=\"w-16 h-16 mx-auto\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"1\" d=\"M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\n          </svg>\n        </div>\n        <h3 class=\"text-xl font-semibold text-white mb-2\">No Payment Entries</h3>\n        <p class=\"text-gray-400 mb-4\">Get started by creating your first payment entry</p>\n        <button \n          @click=\"createNewPayment\"\n          class=\"px-6 py-3 bg-[#8acc33] hover:bg-[#7abc22] text-white font-medium rounded-lg transition-colors duration-200\"\n        >\n          Create New Payment\n        </button>\n      </div>\n    </div>\n\n    <!-- Payment Entry Modal -->\n    <div \n      v-if=\"showModal\" \n      class=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\"\n      @click=\"closeModal\"\n    >\n      <div \n        class=\"bg-[#233d48] rounded-lg shadow-xl w-full max-w-4xl max-h-[90vh] overflow-y-auto border border-[#2a4a58]\"\n        @click.stop\n      >\n        <!-- Modal Header -->\n        <div class=\"p-6 border-b border-[#2a4a58] bg-[#2a4a58]\">\n          <div class=\"flex justify-between items-center\">\n            <h3 class=\"text-xl font-semibold text-white\">\n              {{ currentPayment.name || 'New Payment Entry' }}\n            </h3>\n            <button \n              @click=\"closeModal\"\n              class=\"text-gray-400 hover:text-white transition-colors\"\n            >\n              <svg class=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 18L18 6M6 6l12 12\"></path>\n              </svg>\n            </button>\n          </div>\n        </div>\n\n        <!-- Modal Content -->\n        <div class=\"p-6\">\n          <!-- Payment Details Grid -->\n          <div class=\"grid grid-cols-1 md:grid-cols-2 gap-6 mb-6\">\n            <!-- Left Column -->\n            <div class=\"space-y-6\">\n              <!-- Basic Information -->\n              <div class=\"bg-[#2a4a58] rounded-lg border border-[#2a4a58] p-4\">\n                <h4 class=\"text-lg font-semibold text-white mb-4\">Payment Information</h4>\n                \n                <div class=\"space-y-4\">\n                  <div>\n                    <label class=\"block text-sm font-medium text-gray-300 mb-2\">Payment Type *</label>\n                    <select \n                      v-model=\"currentPayment.payment_type\"\n                      @change=\"handlePaymentTypeChange\"\n                      class=\"w-full px-3 py-2 border border-[#2a4a58] rounded-md focus:outline-none focus:ring-2 focus:ring-[#8acc33] focus:border-transparent bg-[#233d48] text-white\"\n                      required\n                    >\n                      <option value=\"Pay\">Pay</option>\n                      <option value=\"Receive\">Receive</option>\n                      <option value=\"Internal Transfer\">Internal Transfer</option>\n                    </select>\n                  </div>\n\n                  <div>\n                    <label class=\"block text-sm font-medium text-gray-300 mb-2\">Party *</label>\n                    <select \n                      v-model=\"currentPayment.party\"\n                      @change=\"updatePartyDetails\"\n                      class=\"w-full px-3 py-2 border border-[#2a4a58] rounded-md focus:outline-none focus:ring-2 focus:ring-[#8acc33] focus:border-transparent bg-[#233d48] text-white\"\n                      required\n                    >\n                      <option value=\"\">Select {{ currentPayment.payment_type === 'Receive' ? 'Customer' : 'Supplier' }}</option>\n                      <option \n                        v-for=\"party in currentParties\" \n                        :key=\"party.name\"\n                        :value=\"party.name\"\n                      >\n                        {{ party.name }} - {{ party.party_name }}\n                      </option>\n                    </select>\n                  </div>\n\n                  <div v-if=\"currentPayment.party\">\n                    <label class=\"block text-sm font-medium text-gray-300 mb-2\">Party Details</label>\n                    <div class=\"w-full px-3 py-2 border border-[#2a4a58] rounded-md bg-[#233d48] text-gray-300 text-sm space-y-1\">\n                      <div><strong>Name:</strong> {{ currentPayment.party_name }}</div>\n                      <div><strong>Type:</strong> {{ currentPayment.party_type }}</div>\n                    </div>\n                  </div>\n\n                  <div>\n                    <label class=\"block text-sm font-medium text-gray-300 mb-2\">Posting Date *</label>\n                    <input \n                      type=\"date\" \n                      v-model=\"currentPayment.posting_date\"\n                      class=\"w-full px-3 py-2 border border-[#2a4a58] rounded-md focus:outline-none focus:ring-2 focus:ring-[#8acc33] focus:border-transparent bg-[#233d48] text-white\"\n                      required\n                    >\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <!-- Right Column -->\n            <div class=\"space-y-6\">\n              <!-- Amount Information -->\n              <div class=\"bg-[#2a4a58] rounded-lg border border-[#2a4a58] p-4\">\n                <h4 class=\"text-lg font-semibold text-white mb-4\">Amount Details</h4>\n                \n                <div class=\"space-y-4\">\n                  <div>\n                    <label class=\"block text-sm font-medium text-gray-300 mb-2\">\n                      {{ currentPayment.payment_type === 'Receive' ? 'Received Amount *' : 'Paid Amount *' }}\n                    </label>\n                    <input \n                      type=\"number\" \n                      v-model=\"currentPayment.paid_amount\"\n                      @input=\"updateAmountFields\"\n                      class=\"w-full px-3 py-2 border border-[#2a4a58] rounded-md focus:outline-none focus:ring-2 focus:ring-[#8acc33] focus:border-transparent bg-[#233d48] text-white text-lg font-semibold\"\n                      placeholder=\"0.00\"\n                      step=\"0.01\"\n                      required\n                    >\n                  </div>\n\n                  <div v-if=\"currentPayment.payment_type === 'Receive'\">\n                    <label class=\"block text-sm font-medium text-gray-300 mb-2\">Received Amount *</label>\n                    <input \n                      type=\"number\" \n                      v-model=\"currentPayment.received_amount\"\n                      class=\"w-full px-3 py-2 border border-[#2a4a58] rounded-md focus:outline-none focus:ring-2 focus:ring-[#8acc33] focus:border-transparent bg-[#233d48] text-white\"\n                      placeholder=\"0.00\"\n                      step=\"0.01\"\n                      required\n                    >\n                  </div>\n\n                  <div>\n                    <label class=\"block text-sm font-medium text-gray-300 mb-2\">Amount in Words</label>\n                    <div class=\"w-full px-3 py-2 border border-[#2a4a58] rounded-md bg-[#233d48] text-gray-300 text-sm min-h-[42px] flex items-center\">\n                      {{ currentPayment.in_words || 'Zero' }}\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              <!-- Account Information -->\n              <div class=\"bg-[#2a4a58] rounded-lg border border-[#2a4a58] p-4\">\n                <h4 class=\"text-lg font-semibold text-white mb-4\">Account Details</h4>\n                \n                <div class=\"space-y-4\">\n                  <div>\n                    <label class=\"block text-sm font-medium text-gray-300 mb-2\">\n                      {{ currentPayment.payment_type === 'Receive' ? 'Paid From *' : 'Paid From *' }}\n                    </label>\n                    <select \n                      v-model=\"currentPayment.paid_from\"\n                      class=\"w-full px-3 py-2 border border-[#2a4a58] rounded-md focus:outline-none focus:ring-2 focus:ring-[#8acc33] focus:border-transparent bg-[#233d48] text-white\"\n                      required\n                    >\n                      <option value=\"\">Select Account</option>\n                      <option \n                        v-for=\"account in paidFromAccounts\" \n                        :key=\"account.name\"\n                        :value=\"account.name\"\n                      >\n                        {{ account.name }} ({{ account.account_type }})\n                      </option>\n                    </select>\n                  </div>\n\n                  <div>\n                    <label class=\"block text-sm font-medium text-gray-300 mb-2\">\n                      {{ currentPayment.payment_type === 'Receive' ? 'Paid To *' : 'Paid To *' }}\n                    </label>\n                    <select \n                      v-model=\"currentPayment.paid_to\"\n                      class=\"w-full px-3 py-2 border border-[#2a4a58] rounded-md focus:outline-none focus:ring-2 focus:ring-[#8acc33] focus:border-transparent bg-[#233d48] text-white\"\n                      required\n                    >\n                      <option value=\"\">Select Account</option>\n                      <option \n                        v-for=\"account in cashAccounts\" \n                        :key=\"account.name\"\n                        :value=\"account.name\"\n                      >\n                        {{ account.name }} ({{ account.account_type }})\n                      </option>\n                    </select>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <!-- Mode of Payment -->\n          <div class=\"bg-[#2a4a58] rounded-lg border border-[#2a4a58] p-4 mb-6\">\n            <h4 class=\"text-lg font-semibold text-white mb-4\">Payment Details</h4>\n            \n            <div class=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n              <div>\n                <label class=\"block text-sm font-medium text-gray-300 mb-2\">Mode of Payment</label>\n                <select \n                  v-model=\"currentPayment.mode_of_payment\"\n                  class=\"w-full px-3 py-2 border border-[#2a4a58] rounded-md focus:outline-none focus:ring-2 focus:ring-[#8acc33] focus:border-transparent bg-[#233d48] text-white\"\n                >\n                  <option value=\"\">Select Mode</option>\n                  <option value=\"Cash\">Cash</option>\n                  <option value=\"Bank\">Bank Transfer</option>\n                  <option value=\"Cheque\">Cheque</option>\n                  <option value=\"Credit Card\">Credit Card</option>\n                </select>\n              </div>\n              \n              <div>\n                <label class=\"block text-sm font-medium text-gray-300 mb-2\">Reference No</label>\n                <input \n                  type=\"text\" \n                  v-model=\"currentPayment.reference_no\"\n                  class=\"w-full px-3 py-2 border border-[#2a4a58] rounded-md focus:outline-none focus:ring-2 focus:ring-[#8acc33] focus:border-transparent bg-[#233d48] text-white\"\n                  placeholder=\"Optional\"\n                >\n              </div>\n            </div>\n          </div>\n\n          <!-- References -->\n          <div class=\"bg-[#2a4a58] rounded-lg border border-[#2a4a58] p-4 mb-6\">\n            <h4 class=\"text-lg font-semibold text-white mb-4\">References</h4>\n            \n            <div class=\"space-y-3\">\n              <div \n                v-for=\"(ref, index) in currentPayment.references\" \n                :key=\"index\"\n                class=\"border border-[#2a4a58] rounded-md p-3\"\n              >\n                <div class=\"grid grid-cols-2 gap-3 mb-3\">\n                  <div>\n                    <label class=\"block text-xs font-medium text-gray-400 mb-1\">Reference Type</label>\n                    <select \n                      v-model=\"ref.reference_doctype\"\n                      class=\"w-full px-2 py-1 border border-[#2a4a58] rounded-md focus:outline-none focus:ring-1 focus:ring-[#8acc33] focus:border-transparent bg-[#233d48] text-white text-sm\"\n                    >\n                      <option value=\"Purchase Invoice\">Purchase Invoice</option>\n                      <option value=\"Sales Invoice\">Sales Invoice</option>\n                      <option value=\"Journal Entry\">Journal Entry</option>\n                    </select>\n                  </div>\n                  <div>\n                    <label class=\"block text-xs font-medium text-gray-400 mb-1\">Reference Name</label>\n                    <input \n                      type=\"text\" \n                      v-model=\"ref.reference_name\"\n                      class=\"w-full px-2 py-1 border border-[#2a4a58] rounded-md focus:outline-none focus:ring-1 focus:ring-[#8acc33] focus:border-transparent bg-[#233d48] text-white text-sm\"\n                    >\n                  </div>\n                </div>\n                <div class=\"grid grid-cols-2 gap-3\">\n                  <div>\n                    <label class=\"block text-xs font-medium text-gray-400 mb-1\">Amount</label>\n                    <input \n                      type=\"number\" \n                      v-model=\"ref.allocated_amount\"\n                      class=\"w-full px-2 py-1 border border-[#2a4a58] rounded-md focus:outline-none focus:ring-1 focus:ring-[#8acc33] focus:border-transparent bg-[#233d48] text-white text-sm\"\n                      step=\"0.01\"\n                    >\n                  </div>\n                  <div class=\"flex items-end\">\n                    <button \n                      @click=\"removeReference(index)\"\n                      class=\"text-red-400 hover:text-red-300 text-sm\"\n                    >\n                      Remove\n                    </button>\n                  </div>\n                </div>\n              </div>\n              \n              <button \n                @click=\"addReference\"\n                class=\"w-full px-3 py-2 border-2 border-dashed border-[#8acc33] text-[#8acc33] bg-transparent hover:bg-[#2a4a58] font-medium rounded-md transition-colors duration-200 text-sm\"\n              >\n                + Add Reference\n              </button>\n            </div>\n          </div>\n\n          <!-- Remarks -->\n          <div class=\"bg-[#2a4a58] rounded-lg border border-[#2a4a58] p-4 mb-6\">\n            <h4 class=\"text-lg font-semibold text-white mb-4\">Remarks</h4>\n            <textarea \n              v-model=\"currentPayment.remarks\"\n              rows=\"3\"\n              class=\"w-full px-3 py-2 border border-[#2a4a58] rounded-md focus:outline-none focus:ring-2 focus:ring-[#8acc33] focus:border-transparent bg-[#233d48] text-white\"\n              placeholder=\"Add any remarks or notes...\"\n            ></textarea>\n          </div>\n\n          <!-- Help Section -->\n          <div class=\"bg-[#2a4a58] rounded-lg border border-[#2a4a58] p-4 mb-6\">\n            <h4 class=\"text-lg font-semibold text-white mb-3\">Help and Documentation</h4>\n            <div class=\"text-gray-300 text-sm space-y-2\">\n              <p>â€¢ You can quickly track all your payments and receipts from this dashboard</p>\n              <p>â€¢ Submitted payments will automatically appear in your accounting reports</p>\n              <p>â€¢ Use references to link payments to specific invoices or documents</p>\n            </div>\n            <div class=\"mt-4\">\n              <button class=\"text-[#8acc33] hover:text-[#7abc22] font-medium text-sm\">\n                Learn More About Payment Tracking â†’\n              </button>\n            </div>\n          </div>\n\n          <!-- Action Buttons -->\n          <div class=\"flex justify-end space-x-3 pt-6 border-t border-[#2a4a58]\">\n            <button \n              v-if=\"currentPayment.name && currentPayment.status === 'Draft'\"\n              @click=\"deletePayment\"\n              class=\"px-6 py-2 border border-red-500 text-red-500 bg-transparent hover:bg-red-500 hover:text-white font-medium rounded-lg transition-colors duration-200\"\n            >\n              Delete\n            </button>\n            <button \n              @click=\"closeModal\"\n              class=\"px-6 py-2 border border-gray-500 text-gray-300 hover:bg-[#2a4a58] font-medium rounded-lg transition-colors duration-200\"\n            >\n              Cancel\n            </button>\n            <button \n              @click=\"submitPayment\"\n              v-if=\"currentPayment.name && currentPayment.status === 'Draft'\"\n              :disabled=\"isSubmitting\"\n              :class=\"[\n                'px-6 py-2 font-medium rounded-lg transition-colors duration-200',\n                isSubmitting\n                  ? 'bg-gray-500 cursor-not-allowed'\n                  : 'bg-blue-500 hover:bg-blue-600 text-white'\n              ]\"\n            >\n              {{ isSubmitting ? 'Submitting...' : 'Submit' }}\n            </button>\n            <button \n              @click=\"savePayment\"\n              :disabled=\"isSaving || !isFormValid\"\n              :class=\"[\n                'px-6 py-2 font-medium rounded-lg transition-colors duration-200',\n                isSaving || !isFormValid\n                  ? 'bg-gray-500 cursor-not-allowed'\n                  : 'bg-[#8acc33] hover:bg-[#7abc22] text-white'\n              ]\"\n            >\n              {{ isSaving ? 'Saving...' : (currentPayment.name ? 'Update' : 'Save') }}\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'PaymentEntriesPage',\n  data() {\n    return {\n      searchQuery: '',\n      paymentEntries: [],\n      showModal: false,\n      currentPayment: this.createEmptyPayment(),\n      cashAccounts: [],\n      paidFromAccounts: [],\n      customers: [],\n      suppliers: [],\n      isSaving: false,\n      isSubmitting: false\n    }\n  },\n  computed: {\n    filteredPayments() {\n      if (!this.searchQuery) return this.paymentEntries;\n      \n      const query = this.searchQuery.toLowerCase();\n      return this.paymentEntries.filter(payment => \n        payment.name?.toLowerCase().includes(query) ||\n        payment.party_name?.toLowerCase().includes(query) ||\n        payment.payment_type?.toLowerCase().includes(query) ||\n        payment.status?.toLowerCase().includes(query) ||\n        payment.paid_from?.toLowerCase().includes(query) ||\n        payment.paid_to?.toLowerCase().includes(query)\n      );\n    },\n    \n    isFormValid() {\n      const requiredFields = [\n        this.currentPayment.payment_type,\n        this.currentPayment.party,\n        this.currentPayment.posting_date,\n        this.currentPayment.paid_amount,\n        this.currentPayment.paid_from,\n        this.currentPayment.paid_to\n      ];\n      \n      if (this.currentPayment.payment_type === 'Receive') {\n        requiredFields.push(this.currentPayment.received_amount);\n      }\n      \n      return requiredFields.every(field => field && field.toString().trim() !== '');\n    },\n    \n    currentParties() {\n      if (this.currentPayment.payment_type === 'Receive') {\n        return this.customers;\n      } else if (this.currentPayment.payment_type === 'Pay') {\n        return this.suppliers;\n      }\n      return [];\n    }\n  },\n  mounted() {\n    this.loadPaymentEntries();\n    this.loadCashAccounts();\n    this.loadPaidFromAccounts();\n    this.loadCustomers();\n    this.loadSuppliers();\n  },\n  methods: {\n    createEmptyPayment() {\n      return {\n        name: null,\n        payment_type: 'Pay',\n        party_type: 'Supplier',\n        party: '',\n        party_name: '',\n        posting_date: new Date().toISOString().split('T')[0],\n        paid_amount: 0.0,\n        received_amount: 0.0,\n        paid_from: '',\n        paid_to: '',\n        mode_of_payment: '',\n        reference_no: '',\n        reference_date: new Date().toISOString().split('T')[0],\n        remarks: '',\n        company: 'Friends ERP (Demo)',\n        status: 'Draft',\n        references: [],\n        in_words: ''\n      };\n    },\n    \n    createEmptyReference() {\n      return {\n        reference_doctype: 'Purchase Invoice',\n        reference_name: '',\n        allocated_amount: 0.0,\n        total_amount: 0.0\n      };\n    },\n    \n    addReference() {\n      this.currentPayment.references.push(this.createEmptyReference());\n    },\n    \n    removeReference(index) {\n      this.currentPayment.references.splice(index, 1);\n    },\n    \n    async loadCustomers() {\n      try {\n        const response = await fetch('/api/method/frappe.client.get_list', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            'X-Frappe-CSRF-Token': this.getCSRFToken()\n          },\n          body: JSON.stringify({\n            doctype: 'Customer',\n            fields: ['name', 'customer_name'],\n            filters: [['disabled', '=', 0]],\n            order_by: 'customer_name',\n            limit: 1000\n          })\n        });\n        \n        if (response.ok) {\n          const data = await response.json();\n          this.customers = data.message.map(customer => ({\n            name: customer.name,\n            party_name: customer.customer_name,\n            party_type: 'Customer'\n          }));\n        } else {\n          // Fallback to sample customers\n          this.customers = [\n            { name: 'CUST-00001', party_name: 'Grant Plastics Ltd.', party_type: 'Customer' },\n            { name: 'CUST-00002', party_name: 'Summit Traders Ltd.', party_type: 'Customer' },\n            { name: 'CUST-00003', party_name: 'Zuckerman Security Ltd.', party_type: 'Customer' }\n          ];\n        }\n      } catch (error) {\n        console.error('Error loading customers:', error);\n        this.customers = [\n          { name: 'CUST-00001', party_name: 'Grant Plastics Ltd.', party_type: 'Customer' },\n          { name: 'CUST-00002', party_name: 'Summit Traders Ltd.', party_type: 'Customer' }\n        ];\n      }\n    },\n    \n    async loadSuppliers() {\n      try {\n        const response = await fetch('/api/method/frappe.client.get_list', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            'X-Frappe-CSRF-Token': this.getCSRFToken()\n          },\n          body: JSON.stringify({\n            doctype: 'Supplier',\n            fields: ['name', 'supplier_name'],\n            filters: [['disabled', '=', 0]],\n            order_by: 'supplier_name',\n            limit: 1000\n          })\n        });\n        \n        if (response.ok) {\n          const data = await response.json();\n          this.suppliers = data.message.map(supplier => ({\n            name: supplier.name,\n            party_name: supplier.supplier_name,\n            party_type: 'Supplier'\n          }));\n        } else {\n          // Fallback to sample suppliers\n          this.suppliers = [\n            { name: 'SUPP-00001', party_name: 'Grant Plastics Ltd.', party_type: 'Supplier' },\n            { name: 'SUPP-00002', party_name: 'Summit Traders Ltd.', party_type: 'Supplier' },\n            { name: 'SUPP-00003', party_name: 'Zuckerman Security Ltd.', party_type: 'Supplier' }\n          ];\n        }\n      } catch (error) {\n        console.error('Error loading suppliers:', error);\n        this.suppliers = [\n          { name: 'SUPP-00001', party_name: 'Grant Plastics Ltd.', party_type: 'Supplier' },\n          { name: 'SUPP-00002', party_name: 'Summit Traders Ltd.', party_type: 'Supplier' }\n        ];\n      }\n    },\n    \n    updatePartyDetails() {\n      if (this.currentPayment.party) {\n        let selectedParty = null;\n        \n        if (this.currentPayment.payment_type === 'Receive') {\n          selectedParty = this.customers.find(c => c.name === this.currentPayment.party);\n        } else if (this.currentPayment.payment_type === 'Pay') {\n          selectedParty = this.suppliers.find(s => s.name === this.currentPayment.party);\n        }\n        \n        if (selectedParty) {\n          this.currentPayment.party_name = selectedParty.party_name;\n          this.currentPayment.party_type = selectedParty.party_type;\n        }\n      } else {\n        this.currentPayment.party_name = '';\n        this.currentPayment.party_type = this.currentPayment.payment_type === 'Receive' ? 'Customer' : 'Supplier';\n      }\n    },\n    \n    updateAmountFields() {\n      if (this.currentPayment.payment_type === 'Receive') {\n        this.currentPayment.received_amount = this.currentPayment.paid_amount;\n      }\n      this.updateAmountInWords();\n    },\n    \n    updateAmountInWords() {\n      const amount = this.currentPayment.paid_amount;\n      if (amount && amount > 0) {\n        this.currentPayment.in_words = `ETB ${this.numberToWords(amount)} only.`;\n      } else {\n        this.currentPayment.in_words = 'Zero';\n      }\n    },\n    \n    async loadCashAccounts() {\n      try {\n        const response = await fetch('/api/method/frappe.client.get_list', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            'X-Frappe-CSRF-Token': this.getCSRFToken()\n          },\n          body: JSON.stringify({\n            doctype: 'Account',\n            fields: ['name', 'account_type', 'account_name'],\n            filters: [\n              ['account_type', '=', 'Cash'],\n              ['is_group', '=', 0],\n              ['company', '=', 'Friends ERP (Demo)']\n            ],\n            order_by: 'name'\n          })\n        });\n        \n        if (response.ok) {\n          const data = await response.json();\n          this.cashAccounts = data.message;\n        } else {\n          this.cashAccounts = [\n            { name: 'Cash - FED', account_type: 'Cash', account_name: 'Cash' },\n            { name: 'Petty Cash - FED', account_type: 'Cash', account_name: 'Petty Cash' }\n          ];\n        }\n      } catch (error) {\n        console.error('Error loading cash accounts:', error);\n        this.cashAccounts = [\n          { name: 'Cash - FED', account_type: 'Cash', account_name: 'Cash' },\n          { name: 'Petty Cash - FED', account_type: 'Cash', account_name: 'Petty Cash' }\n        ];\n      }\n    },\n    \n    async loadPaidFromAccounts() {\n      try {\n        const response = await fetch('/api/method/frappe.client.get_list', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            'X-Frappe-CSRF-Token': this.getCSRFToken()\n          },\n          body: JSON.stringify({\n            doctype: 'Account',\n            fields: ['name', 'account_type', 'account_name'],\n            filters: [\n              ['company', '=', 'Friends ERP (Demo)'],\n              ['is_group', '=', 0]\n            ],\n            order_by: 'name'\n          })\n        });\n        \n        if (response.ok) {\n          const data = await response.json();\n          this.paidFromAccounts = data.message;\n        } else {\n          this.paidFromAccounts = [\n            { name: 'Debtors - FED', account_type: 'Receivable', account_name: 'Debtors' },\n            { name: 'Creditors - FED', account_type: 'Payable', account_name: 'Creditors' },\n            { name: 'Demo Bank Account - FED', account_type: 'Bank', account_name: 'Demo Bank Account' }\n          ];\n        }\n      } catch (error) {\n        console.error('Error loading paid from accounts:', error);\n        this.paidFromAccounts = [\n          { name: 'Debtors - FED', account_type: 'Receivable', account_name: 'Debtors' },\n          { name: 'Creditors - FED', account_type: 'Payable', account_name: 'Creditors' }\n        ];\n      }\n    },\n    \n    async loadPaymentEntries() {\n      try {\n        const response = await fetch('/api/method/frappe.client.get_list', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            'X-Frappe-CSRF-Token': this.getCSRFToken()\n          },\n          body: JSON.stringify({\n            doctype: 'Payment Entry',\n            fields: ['*'],\n            order_by: 'creation desc',\n            limit: 50\n          })\n        });\n        \n        if (response.ok) {\n          const data = await response.json();\n          this.paymentEntries = data.message;\n        } else {\n          throw new Error('Failed to load payment entries');\n        }\n      } catch (error) {\n        console.error('Error loading payment entries:', error);\n        this.paymentEntries = [\n          {\n            \"name\": \"ACC-PAY-2025-00006\",\n            \"payment_type\": \"Receive\",\n            \"party_type\": \"Customer\",\n            \"party\": \"CUST-00001\",\n            \"party_name\": \"Grant Plastics Ltd.\",\n            \"posting_date\": \"2025-10-07\",\n            \"paid_amount\": 1200.0,\n            \"received_amount\": 1200.0,\n            \"paid_from\": \"Debtors - FED\",\n            \"paid_to\": \"Cash - FED\",\n            \"status\": \"Submitted\",\n            \"company\": \"Friends ERP (Demo)\",\n            \"in_words\": \"ETB One Thousand, Two Hundred only.\",\n            \"remarks\": \"Amount ETB 1200 received from Grant Plastics Ltd.\",\n            \"references\": []\n          }\n        ];\n      }\n    },\n    \n    createNewPayment() {\n      this.currentPayment = this.createEmptyPayment();\n      this.showModal = true;\n    },\n    \n    viewPayment(payment) {\n      this.currentPayment = JSON.parse(JSON.stringify(payment));\n      this.showModal = true;\n    },\n    \n    closeModal() {\n      this.showModal = false;\n      this.currentPayment = this.createEmptyPayment();\n    },\n    \n    handlePaymentTypeChange() {\n      // Clear party selection when payment type changes\n      this.currentPayment.party = '';\n      this.currentPayment.party_name = '';\n      this.currentPayment.party_type = this.currentPayment.payment_type === 'Receive' ? 'Customer' : 'Supplier';\n      \n      // Auto-set default accounts based on payment type\n      if (this.currentPayment.payment_type === 'Receive') {\n        if (!this.currentPayment.paid_from && this.paidFromAccounts.length > 0) {\n          const debtorAccount = this.paidFromAccounts.find(acc => acc.account_type === 'Receivable');\n          if (debtorAccount) {\n            this.currentPayment.paid_from = debtorAccount.name;\n          }\n        }\n        if (!this.currentPayment.paid_to && this.cashAccounts.length > 0) {\n          this.currentPayment.paid_to = this.cashAccounts[0].name;\n        }\n        this.currentPayment.received_amount = this.currentPayment.paid_amount;\n      } else if (this.currentPayment.payment_type === 'Pay') {\n        if (!this.currentPayment.paid_from && this.paidFromAccounts.length > 0) {\n          const bankAccount = this.paidFromAccounts.find(acc => acc.account_type === 'Bank');\n          if (bankAccount) {\n            this.currentPayment.paid_from = bankAccount.name;\n          }\n        }\n        if (!this.currentPayment.paid_to && this.paidFromAccounts.length > 0) {\n          const creditorAccount = this.paidFromAccounts.find(acc => acc.account_type === 'Payable');\n          if (creditorAccount) {\n            this.currentPayment.paid_to = creditorAccount.name;\n          }\n        }\n      }\n    },\n    \n    numberToWords(num) {\n      const ones = ['', 'One', 'Two', 'Three', 'Four', 'Five', 'Six', 'Seven', 'Eight', 'Nine'];\n      const teens = ['Ten', 'Eleven', 'Twelve', 'Thirteen', 'Fourteen', 'Fifteen', 'Sixteen', 'Seventeen', 'Eighteen', 'Nineteen'];\n      const tens = ['', '', 'Twenty', 'Thirty', 'Forty', 'Fifty', 'Sixty', 'Seventy', 'Eighty', 'Ninety'];\n      \n      if (num === 0) return 'Zero';\n      if (num < 10) return ones[Math.floor(num)];\n      if (num < 20) return teens[Math.floor(num) - 10];\n      if (num < 100) return tens[Math.floor(num / 10)] + (num % 10 !== 0 ? ' ' + ones[num % 10] : '');\n      if (num < 1000) return ones[Math.floor(num / 100)] + ' Hundred' + (num % 100 !== 0 ? ' ' + this.numberToWords(num % 100) : '');\n      if (num < 100000) return this.numberToWords(Math.floor(num / 1000)) + ' Thousand' + (num % 1000 !== 0 ? ' ' + this.numberToWords(num % 1000) : '');\n      return 'Large Amount';\n    },\n    \n    async savePayment() {\n      if (this.isSaving || !this.isFormValid) return;\n      \n      this.isSaving = true;\n      \n      try {\n        let response;\n        \n        if (this.currentPayment.name) {\n          response = await fetch('/api/method/frappe.client.save', {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json',\n              'X-Frappe-CSRF-Token': this.getCSRFToken()\n            },\n            body: JSON.stringify({\n              doc: this.currentPayment\n            })\n          });\n        } else {\n          response = await fetch('/api/method/frappe.client.insert', {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json',\n              'X-Frappe-CSRF-Token': this.getCSRFToken()\n            },\n            body: JSON.stringify({\n              doc: {\n                doctype: 'Payment Entry',\n                ...this.currentPayment\n              }\n            })\n          });\n        }\n        \n        if (response.ok) {\n          const data = await response.json();\n          \n          if (!this.currentPayment.name) {\n            this.currentPayment.name = data.message.name;\n          }\n          \n          this.showAlert('Payment entry saved successfully', 'green');\n          this.loadPaymentEntries();\n          this.closeModal();\n        } else {\n          const errorData = await response.json();\n          throw new Error(errorData._server_messages || 'Failed to save payment entry');\n        }\n      } catch (error) {\n        console.error('Error saving payment entry:', error);\n        this.showAlert('Error saving payment entry: ' + error.message, 'red');\n      } finally {\n        this.isSaving = false;\n      }\n    },\n    \n    async submitPayment() {\n      if (this.isSubmitting) return;\n      \n      this.isSubmitting = true;\n      \n      try {\n        const response = await fetch('/api/method/frappe.client.set_value', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            'X-Frappe-CSRF-Token': this.getCSRFToken()\n          },\n          body: JSON.stringify({\n            doctype: 'Payment Entry',\n            name: this.currentPayment.name,\n            fieldname: {\n              status: 'Submitted'\n            }\n          })\n        });\n        \n        if (response.ok) {\n          this.showAlert('Payment entry submitted successfully', 'green');\n          this.loadPaymentEntries();\n          this.closeModal();\n        } else {\n          throw new Error('Failed to submit payment entry');\n        }\n      } catch (error) {\n        console.error('Error submitting payment entry:', error);\n        this.showAlert('Error submitting payment entry', 'red');\n      } finally {\n        this.isSubmitting = false;\n      }\n    },\n    \n    async deletePayment() {\n      if (!this.currentPayment.name) return;\n      \n      if (confirm(`Are you sure you want to delete payment ${this.currentPayment.name}?`)) {\n        try {\n          const response = await fetch('/api/method/frappe.client.delete', {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json',\n              'X-Frappe-CSRF-Token': this.getCSRFToken()\n            },\n            body: JSON.stringify({\n              doctype: 'Payment Entry',\n              name: this.currentPayment.name\n            })\n          });\n          \n          if (response.ok) {\n            this.showAlert('Payment entry deleted successfully', 'green');\n            this.loadPaymentEntries();\n            this.closeModal();\n          } else {\n            throw new Error('Failed to delete payment entry');\n          }\n        } catch (error) {\n          console.error('Error deleting payment entry:', error);\n          this.showAlert('Error deleting payment entry', 'red');\n        }\n      }\n    },\n    \n    formatCurrency(amount) {\n      return new Intl.NumberFormat('en-ET', {\n        style: 'currency',\n        currency: 'ETB'\n      }).format(amount);\n    },\n    \n    formatDate(dateString) {\n      if (!dateString) return '';\n      return new Date(dateString).toLocaleDateString('en-US', {\n        year: 'numeric',\n        month: 'short',\n        day: 'numeric'\n      });\n    },\n    \n    statusBadgeClasses(status) {\n      const classes = {\n        'Draft': 'bg-yellow-100 text-yellow-800',\n        'Submitted': 'bg-green-100 text-green-800',\n        'Cancelled': 'bg-red-100 text-red-800'\n      };\n      return classes[status] || 'bg-gray-100 text-gray-800';\n    },\n    \n    typeBadgeClasses(type) {\n      const classes = {\n        'Pay': 'bg-red-100 text-red-800',\n        'Receive': 'bg-green-100 text-green-800',\n        'Internal Transfer': 'bg-blue-100 text-blue-800'\n      };\n      return classes[type] || 'bg-gray-100 text-gray-800';\n    },\n    \n    getCSRFToken() {\n      const metaTag = document.querySelector('meta[name=\"csrf-token\"]');\n      return metaTag ? metaTag.getAttribute('content') : '';\n    },\n    \n    showAlert(message, indicator) {\n      const alertDiv = document.createElement('div');\n      alertDiv.className = `fixed top-4 left-1/2 transform -translate-x-1/2 px-6 py-3 rounded-lg shadow-lg z-50 ${\n        indicator === 'green' ? 'bg-green-500 text-white' : 'bg-red-500 text-white'\n      }`;\n      alertDiv.textContent = message;\n      \n      document.body.appendChild(alertDiv);\n      \n      setTimeout(() => {\n        document.body.removeChild(alertDiv);\n      }, 3000);\n    }\n  }\n}\n</script>\n\n<style scoped>\n/* Custom styles for better text readability */\nselect option {\n  background-color: #233d48;\n  color: white;\n}\n\n/* Ensure proper styling for all interactive elements */\ninput:focus, select:focus, textarea:focus {\n  outline: none;\n  ring: 2px;\n}\n</style>"],"names":["_sfc_main","query","payment","_a","_b","_c","_d","_e","_f","requiredFields","field","index","response","data","customer","error","supplier","selectedParty","c","s","amount","debtorAccount","acc","bankAccount","creditorAccount","num","ones","teens","tens","errorData","dateString","status","type","metaTag","message","indicator","alertDiv","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_9","_hoisted_11","_hoisted_12","_hoisted_13","_hoisted_14","_hoisted_15","_hoisted_16","_hoisted_17","_hoisted_18","_hoisted_19","_hoisted_20","_hoisted_21","_hoisted_22","_hoisted_23","_hoisted_24","_hoisted_26","_hoisted_27","_hoisted_28","_hoisted_29","_hoisted_30","_hoisted_31","_hoisted_32","_hoisted_33","_hoisted_34","_hoisted_37","_hoisted_38","_hoisted_39","_hoisted_40","_hoisted_41","_hoisted_43","_hoisted_44","_hoisted_45","_hoisted_46","_hoisted_48","_hoisted_50","_hoisted_51","_hoisted_52","_hoisted_53","_hoisted_54","_hoisted_57","_hoisted_59","_hoisted_61","_hoisted_62","_openBlock","_createElementBlock","_createElementVNode","$data","$event","$options","args","_hoisted_8","_cache","_Fragment","_renderList","_toDisplayString","_hoisted_25","_vModelSelect","party","_hoisted_35","_hoisted_36","_vModelText","_hoisted_42","account","_hoisted_47","_hoisted_49","ref","_hoisted_60","_normalizeClass","_hoisted_63","_hoisted_64"],"mappings":"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"}