{"version":3,"file":"Customer-2dce468a.js","sources":["../../../../frontend/src/pages/Customer.vue"],"sourcesContent":["<template>\n  <div class=\"min-h-screen bg-[#233d48] py-6 px-4\">\n    <div class=\"max-w-6xl mx-auto\">\n      <!-- Header -->\n      <div class=\"flex justify-between items-center mb-8\">\n        <div>\n          <h1 class=\"text-2xl font-bold text-white\">{{ customer.customer_name }}</h1>\n          <p class=\"text-gray-300\">Customer Details</p>\n        </div>\n        <div class=\"flex space-x-3\">\n          <button\n            @click=\"$router.back()\"\n            class=\"px-4 py-2 border border-[#8acc33] text-[#8acc33] bg-[#233d48] hover:bg-[#2a4a58] rounded-md font-medium transition-colors duration-200\"\n          >\n            Back to Customers\n          </button>\n          <button\n            @click=\"deleteCustomer\"\n            class=\"px-4 py-2 bg-red-600 text-white rounded-md font-medium transition-colors duration-200 hover:bg-red-700\"\n          >\n            Delete Customer\n          </button>\n        </div>\n      </div>\n\n      <!-- Loading State -->\n      <div v-if=\"loading\" class=\"flex justify-center items-center py-12\">\n        <div class=\"animate-spin rounded-full h-12 w-12 border-b-2 border-[#8acc33]\"></div>\n      </div>\n\n      <!-- Customer Details -->\n      <div v-else class=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n        <!-- Left Column -->\n        <div class=\"lg:col-span-2 space-y-6\">\n          <!-- Properties Card -->\n          <div class=\"bg-[#2a4a58] rounded-lg shadow-xl border border-[#2a4a58] overflow-hidden\">\n            <div class=\"p-4 border-b border-[#233d48] bg-[#233d48]\">\n              <h3 class=\"text-lg font-semibold text-white\">Properties</h3>\n            </div>\n            <div class=\"p-4\">\n              <div class=\"space-y-3\">\n                <div>\n                  <h4 class=\"text-[#8acc33] font-medium\">Megengaya</h4>\n                  <p class=\"text-gray-300\">{{ customer.customer_primary_address || 'Addis Ababa' }}</p>\n                  <p class=\"text-gray-300\">{{ customer.territory || 'Oromba' }}</p>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <!-- Contacts Card -->\n          <div class=\"bg-[#2a4a58] rounded-lg shadow-xl border border-[#2a4a58] overflow-hidden\">\n            <div class=\"p-4 border-b border-[#233d48] bg-[#233d48]\">\n              <h3 class=\"text-lg font-semibold text-white\">Contacts</h3>\n            </div>\n            <div class=\"p-4\">\n              <div class=\"space-y-4\">\n                <div>\n                  <p class=\"text-gray-300\">Name: <span class=\"text-white\">{{ customer.customer_name }}</span></p>\n                  <p class=\"text-gray-300\">Role: <span class=\"text-white\">{{ customer.customer_type }}</span></p>\n                  <p class=\"text-gray-300\">Phone: <span class=\"text-white\">{{ customer.mobile_no || 'N/A' }}</span></p>\n                  <p class=\"text-gray-300\">Email: <span class=\"text-white\">{{ customer.email_id || 'N/A' }}</span></p>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <!-- Jobs Card -->\n          <div class=\"bg-[#2a4a58] rounded-lg shadow-xl border border-[#2a4a58] overflow-hidden\">\n            <div class=\"p-4 border-b border-[#233d48] bg-[#233d48]\">\n              <div class=\"flex justify-between items-center\">\n                <h3 class=\"text-lg font-semibold text-white\">Jobs</h3>\n                <span class=\"bg-[#8acc33] text-white px-2 py-1 rounded text-sm\">\n                  {{ filteredTasks.length }} jobs\n                </span>\n              </div>\n            </div>\n            <div class=\"p-4\">\n              <div v-if=\"filteredTasks.length === 0\" class=\"text-center py-4\">\n                <p class=\"text-gray-300\">No jobs found for this customer</p>\n              </div>\n              <div v-else class=\"space-y-4\">\n                <div \n                  v-for=\"task in filteredTasks\" \n                  :key=\"task.name\"\n                  class=\"border border-[#233d48] rounded-lg p-4 hover:border-[#8acc33] transition-colors duration-200\"\n                >\n                  <div class=\"flex justify-between items-start mb-2\">\n                    <h4 class=\"text-white font-medium\">{{ task.subject }}</h4>\n                    <span \n                      class=\"px-2 py-1 rounded text-xs\"\n                      :class=\"getStatusClass(task.status)\"\n                    >\n                      {{ task.status }}\n                    </span>\n                  </div>\n                  <p class=\"text-gray-300 text-sm mb-2\" v-html=\"task.description\"></p>\n                  <div class=\"grid grid-cols-2 gap-2 text-sm\">\n                    <div class=\"text-gray-300\">\n                      <span class=\"text-[#8acc33]\">Type:</span> {{ task.type }}\n                    </div>\n                    <div class=\"text-gray-300\">\n                      <span class=\"text-[#8acc33]\">Priority:</span> {{ task.priority }}\n                    </div>\n                    <div class=\"text-gray-300\">\n                      <span class=\"text-[#8acc33]\">Start:</span> {{ formatDate(task.exp_start_date) }}\n                    </div>\n                    <div class=\"text-gray-300\">\n                      <span class=\"text-[#8acc33]\">End:</span> {{ formatDate(task.exp_end_date) }}\n                    </div>\n                  </div>\n                  <div class=\"mt-3 pt-3 border-t border-[#233d48]\">\n                    <div class=\"flex justify-between items-center text-sm\">\n                      <span class=\"text-gray-300\">Progress: {{ task.progress }}%</span>\n                      <span class=\"text-gray-300\">Expected Time: {{ task.expected_time }}h</span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n\n        </div>\n\n        <!-- Right Column -->\n        <div class=\"space-y-6\">\n          <!-- Schedule Card -->\n          <div class=\"bg-[#2a4a58] rounded-lg shadow-xl border border-[#2a4a58] overflow-hidden\">\n            <div class=\"p-4 border-b border-[#233d48] bg-[#233d48]\">\n              <div class=\"flex justify-between items-center\">\n                <h3 class=\"text-lg font-semibold text-white\">Schedule</h3>\n                <span class=\"bg-[#8acc33] text-white px-2 py-1 rounded text-sm\">\n                  {{ filteredAppointments.length }} appointments\n                </span>\n              </div>\n            </div>\n            <div class=\"p-4\">\n              <div v-if=\"filteredAppointments.length === 0\" class=\"text-center py-4\">\n                <p class=\"text-gray-300\">No appointments scheduled</p>\n              </div>\n              <div v-else class=\"space-y-4\">\n                <div \n                  v-for=\"appointment in filteredAppointments\" \n                  :key=\"appointment.name\"\n                  class=\"border border-[#233d48] rounded-lg p-4 hover:border-[#8acc33] transition-colors duration-200\"\n                >\n                  <div class=\"flex justify-between items-start mb-2\">\n                    <h4 class=\"text-white font-medium\">Appointment with {{ appointment.appointment_with }}</h4>\n                    <span \n                      class=\"px-2 py-1 rounded text-xs\"\n                      :class=\"getAppointmentStatusClass(appointment.status)\"\n                    >\n                      {{ appointment.status }}\n                    </span>\n                  </div>\n                  <p class=\"text-gray-300 text-sm mb-3\">{{ appointment.customer_details }}</p>\n                  \n                  <div class=\"space-y-2 text-sm\">\n                    <div class=\"flex justify-between\">\n                      <span class=\"text-gray-300\">Scheduled Time:</span>\n                      <span class=\"text-white\">{{ formatDateTime(appointment.scheduled_time) }}</span>\n                    </div>\n                    <div class=\"flex justify-between\">\n                      <span class=\"text-gray-300\">End Time:</span>\n                      <span class=\"text-white\">{{ formatDateTime(appointment.custom_scheduled_end_time) }}</span>\n                    </div>\n                  </div>\n                  \n                  <div class=\"mt-3 pt-3 border-t border-[#233d48]\">\n                    <div class=\"flex justify-between items-center text-sm\">\n                      <span class=\"text-gray-300\">Phone: {{ appointment.customer_phone_number }}</span>\n                      <span class=\"text-gray-300\">Email: {{ appointment.customer_email }}</span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <!-- Billing History Card -->\n          <div class=\"bg-[#2a4a58] rounded-lg shadow-xl border border-[#2a4a58] overflow-hidden\">\n            <div class=\"p-4 border-b border-[#233d48] bg-[#233d48]\">\n              <div class=\"flex justify-between items-center\">\n                <h3 class=\"text-lg font-semibold text-white\">Billing History</h3>\n                <span class=\"bg-[#8acc33] text-white px-2 py-1 rounded text-sm\">\n                  {{ salesInvoices.length }} invoices\n                </span>\n              </div>\n            </div>\n            <div class=\"p-4\">\n              <div v-if=\"salesInvoices.length === 0\" class=\"text-center py-4\">\n                <p class=\"text-gray-300\">No billing history</p>\n                <p class=\"text-gray-300 text-sm\">This client hasn't been billed yet</p>\n              </div>\n              <div v-else class=\"space-y-4\">\n                <div \n                  v-for=\"invoice in salesInvoices\" \n                  :key=\"invoice.name\"\n                  class=\"border border-[#233d48] rounded-lg p-4 hover:border-[#8acc33] transition-colors duration-200\"\n                >\n                  <div class=\"flex justify-between items-start mb-3\">\n                    <div>\n                      <h4 class=\"text-white font-medium\">{{ invoice.name }}</h4>\n                      <p class=\"text-gray-300 text-sm\">{{ formatDate(invoice.posting_date) }}</p>\n                    </div>\n                    <span \n                      class=\"px-2 py-1 rounded text-xs\"\n                      :class=\"getInvoiceStatusClass(invoice.status)\"\n                    >\n                      {{ invoice.status }}\n                    </span>\n                  </div>\n                  \n                  <div class=\"grid grid-cols-2 gap-4 text-sm mb-3\">\n                    <div>\n                      <p class=\"text-gray-300\">Due Date</p>\n                      <p class=\"text-white\">{{ formatDate(invoice.due_date) }}</p>\n                    </div>\n                    <div>\n                      <p class=\"text-gray-300\">Grand Total</p>\n                      <p class=\"text-white font-medium\">{{ formatCurrency(invoice.grand_total, invoice.currency) }}</p>\n                    </div>\n                  </div>\n                  \n                  <div class=\"flex justify-between items-center text-sm pt-3 border-t border-[#233d48]\">\n                    <span class=\"text-gray-300\">\n                      Outstanding: {{ formatCurrency(invoice.outstanding_amount, invoice.currency) }}\n                    </span>\n                    <button \n                      @click=\"viewInvoice(invoice.name)\"\n                      class=\"text-[#8acc33] hover:text-green-300 transition-colors duration-200\"\n                    >\n                      View Details\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <!-- Current Balance Card -->\n          <div class=\"bg-[#2a4a58] rounded-lg shadow-xl border border-[#2a4a58] overflow-hidden\">\n            <div class=\"p-4 border-b border-[#233d48] bg-[#233d48]\">\n              <h3 class=\"text-lg font-semibold text-white\">Current Balance</h3>\n            </div>\n            <div class=\"p-4\">\n              <p class=\"text-2xl font-bold text-white mb-2\">\n                {{ formatCurrency(totalOutstanding, defaultCurrency) }}\n              </p>\n              <p class=\"text-gray-300 text-sm\">Total Outstanding Amount</p>\n            </div>\n          </div>\n        </div>\n      </div>\n\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, onMounted, computed } from 'vue'\nimport { useRoute, useRouter } from 'vue-router'\n\nconst route = useRoute()\nconst router = useRouter()\nconst customer = ref({})\nconst loading = ref(false)\nconst internalNotes = ref('')\nconst tasks = ref([])\nconst appointments = ref([])\nconst salesInvoices = ref([])\nconst defaultCurrency = ref('ETB') // Default currency, you can change this\n\n// Computed properties for filtered data\nconst filteredTasks = computed(() => {\n  return tasks.value.filter(task => {\n    return task.customer_name === customer.value.customer_name || \n           task.subject?.includes(customer.value.customer_name);\n  });\n});\n\nconst filteredAppointments = computed(() => {\n  return appointments.value.filter(appointment => {\n    return appointment.customer_name === customer.value.customer_name;\n  });\n});\n\n// Computed property for total outstanding amount\nconst totalOutstanding = computed(() => {\n  return salesInvoices.value.reduce((total, invoice) => {\n    return total + (parseFloat(invoice.outstanding_amount) || 0);\n  }, 0);\n});\n\n// Fetch customer details\nconst fetchCustomer = async () => {\n  loading.value = true\n  try {\n    const customerName = route.params.customerId\n    \n    // Try to fetch from API first\n    const response = await fetch(`/api/resource/Customer/${customerName}`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'X-Frappe-CSRF-Token': await getCSRFToken()\n      }\n    })\n\n    if (response.ok) {\n      const data = await response.json()\n      customer.value = data.data\n      \n      // Fetch associated data\n      await Promise.all([\n        fetchCustomerAddress(customerName),\n        fetchCustomerTasks(customerName),\n        fetchCustomerAppointments(customerName),\n        fetchSalesInvoices(customerName)\n      ])\n    } else {\n      console.error('Failed to fetch customer details')\n\n    }\n  } catch (error) {\n    console.error('Error fetching customer:', error)\n\n  } finally {\n    loading.value = false\n  }\n}\n\n// Fetch sales invoices for customer\nconst fetchSalesInvoices = async (customerName) => {\n  try {\n    const response = await fetch('/api/method/frappe.client.get_list', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'X-Frappe-CSRF-Token': await getCSRFToken()\n      },\n      body: JSON.stringify({\n        doctype: 'Sales Invoice',\n        filters: [\n          ['customer', '=', customerName]\n        ],\n        fields: [\n          'name',\n          'posting_date',\n          'due_date',\n          'grand_total',\n          'outstanding_amount',\n          'status',\n          'currency',\n          'company'\n        ],\n        order_by: 'posting_date desc',\n        limit: 20\n      })\n    })\n\n    if (response.ok) {\n      const data = await response.json()\n      salesInvoices.value = data.message || []\n    } else {\n      console.error('Failed to fetch sales invoices')\n    }\n  } catch (error) {\n    console.error('Error fetching sales invoices:', error)\n  }\n}\n\n// Fetch tasks for customer\nconst fetchCustomerTasks = async (customerName) => {\n  try {\n    const response = await fetch('/api/method/frappe.client.get_list', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'X-Frappe-CSRF-Token': await getCSRFToken()\n      },\n      body: JSON.stringify({\n        doctype: 'Task',\n        filters: [\n          ['customer', '=', customerName]\n        ],\n        fields: ['*'],\n        limit: 50\n      })\n    })\n\n    if (response.ok) {\n      const data = await response.json()\n      tasks.value = data.message || []\n    } else {\n      console.error('Failed to fetch tasks')\n    }\n  } catch (error) {\n    console.error('Error fetching tasks:', error)\n  }\n}\n\n// Fetch appointments for customer\nconst fetchCustomerAppointments = async (customerName) => {\n  try {\n    const response = await fetch('/api/method/frappe.client.get_list', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'X-Frappe-CSRF-Token': await getCSRFToken()\n      },\n      body: JSON.stringify({\n        doctype: 'Appointment',\n        filters: [\n          ['customer_name', '=', customerName]\n        ],\n        fields: ['*'],\n        limit: 50\n      })\n    })\n\n    if (response.ok) {\n      const data = await response.json()\n      appointments.value = data.message || []\n    } else {\n      console.error('Failed to fetch appointments')\n    }\n  } catch (error) {\n    console.error('Error fetching appointments:', error)\n  }\n}\n\n\n\n// Fetch customer address\nconst fetchCustomerAddress = async (customerName) => {\n  try {\n    const addressResponse = await fetch('/api/method/frappe.client.get_list', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'X-Frappe-CSRF-Token': await getCSRFToken()\n      },\n      body: JSON.stringify({\n        doctype: 'Address',\n        filters: { 'links.link_name': customerName },\n        fields: ['name', 'address_line1', 'address_line2', 'city', 'state', 'country', 'pincode', 'phone', 'email_id'],\n        limit: 1\n      })\n    })\n\n    if (addressResponse.ok) {\n      const addressDataList = await addressResponse.json()\n      if (addressDataList.message && addressDataList.message.length > 0) {\n        const address = addressDataList.message[0]\n        // Update form if needed\n      }\n    }\n  } catch (error) {\n    console.error('Error fetching address:', error)\n  }\n}\n\n// Get CSRF Token\nconst getCSRFToken = async () => {\n  try {\n    const response = await fetch('/api/method/frappe.csrf_token.get_csrf_token')\n    const data = await response.json()\n    return data.message.csrf_token\n  } catch (error) {\n    console.error('Error getting CSRF token:', error)\n    return ''\n  }\n}\n\n// Helper functions\nconst getStatusClass = (status) => {\n  const statusClasses = {\n    'Open': 'bg-blue-500 text-white',\n    'Working': 'bg-yellow-500 text-white',\n    'Completed': 'bg-green-500 text-white',\n    'Cancelled': 'bg-red-500 text-white',\n    'Overdue': 'bg-orange-500 text-white'\n  }\n  return statusClasses[status] || 'bg-gray-500 text-white'\n}\n\nconst getAppointmentStatusClass = (status) => {\n  const statusClasses = {\n    'Scheduled': 'bg-blue-500 text-white',\n    'Confirmed': 'bg-green-500 text-white',\n    'Cancelled': 'bg-red-500 text-white',\n    'Unverified': 'bg-yellow-500 text-white',\n    'Completed': 'bg-purple-500 text-white'\n  }\n  return statusClasses[status] || 'bg-gray-500 text-white'\n}\n\nconst getInvoiceStatusClass = (status) => {\n  const statusClasses = {\n    'Draft': 'bg-gray-500 text-white',\n    'Submitted': 'bg-blue-500 text-white',\n    'Paid': 'bg-green-500 text-white',\n    'Partly Paid': 'bg-yellow-500 text-white',\n    'Unpaid': 'bg-orange-500 text-white',\n    'Overdue': 'bg-red-500 text-white',\n    'Cancelled': 'bg-red-500 text-white'\n  }\n  return statusClasses[status] || 'bg-gray-500 text-white'\n}\n\nconst formatDate = (dateString) => {\n  if (!dateString) return 'N/A'\n  return new Date(dateString).toLocaleDateString('en-US', {\n    year: 'numeric',\n    month: 'short',\n    day: 'numeric'\n  })\n}\n\nconst formatDateTime = (dateTimeString) => {\n  if (!dateTimeString) return 'N/A'\n  return new Date(dateTimeString).toLocaleString('en-US', {\n    year: 'numeric',\n    month: 'short',\n    day: 'numeric',\n    hour: '2-digit',\n    minute: '2-digit'\n  })\n}\n\nconst formatCurrency = (amount, currency = 'ETB') => {\n  if (amount === null || amount === undefined) return 'N/A'\n  return new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: currency,\n    minimumFractionDigits: 2\n  }).format(amount)\n}\n\nconst viewInvoice = (invoiceName) => {\n  // Open invoice in new tab or show details\n  window.open(`/app/sales-invoice/${invoiceName}`, '_blank')\n}\n\n// Delete customer\nconst deleteCustomer = async () => {\n  if (!confirm('Are you sure you want to delete this customer? This action cannot be undone.')) return\n\n  try {\n    const response = await fetch('/api/method/frappe.client.delete', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'X-Frappe-CSRF-Token': await getCSRFToken()\n      },\n      body: JSON.stringify({\n        doctype: 'Customer',\n        name: customer.value.name\n      })\n    })\n\n    if (response.ok) {\n      alert('Customer deleted successfully!')\n      router.push('/customers')\n    } else {\n      console.error('Failed to delete customer')\n      alert('Failed to delete customer. Please try again.')\n    }\n  } catch (error) {\n    console.error('Error deleting customer:', error)\n    alert('Error deleting customer. Please try again.')\n  }\n}\n\n\nonMounted(() => {\n  fetchCustomer()\n})\n</script>"],"names":["route","useRoute","router","useRouter","customer","ref","loading","tasks","appointments","salesInvoices","defaultCurrency","filteredTasks","computed","task","_a","filteredAppointments","appointment","totalOutstanding","total","invoice","fetchCustomer","customerName","response","getCSRFToken","data","fetchCustomerAddress","fetchCustomerTasks","fetchCustomerAppointments","fetchSalesInvoices","error","addressResponse","addressDataList","address","getStatusClass","status","getAppointmentStatusClass","getInvoiceStatusClass","formatDate","dateString","formatDateTime","dateTimeString","formatCurrency","amount","currency","viewInvoice","invoiceName","deleteCustomer","onMounted","_openBlock","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","_hoisted_4","_toDisplayString","_cache","_hoisted_5","$event","$router","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","_hoisted_13","_hoisted_14","_hoisted_15","_hoisted_16","_hoisted_17","_hoisted_18","_hoisted_19","_hoisted_20","_hoisted_21","_hoisted_22","_hoisted_23","_hoisted_24","_hoisted_25","_hoisted_26","_hoisted_27","_hoisted_28","_hoisted_29","_hoisted_30","_hoisted_31","_Fragment","_renderList","_hoisted_32","_hoisted_33","_hoisted_35","_hoisted_36","_hoisted_37","_hoisted_38","_createTextVNode","_hoisted_39","_hoisted_40","_hoisted_41","_hoisted_42","_hoisted_43","_hoisted_44","_hoisted_45","_hoisted_46","_hoisted_47","_hoisted_48","_hoisted_49","_hoisted_50","_hoisted_51","_hoisted_52","_hoisted_53","_hoisted_54","_hoisted_55","_hoisted_56","_hoisted_57","_hoisted_58","_hoisted_59","_hoisted_60","_hoisted_61","_hoisted_62","_hoisted_63","_hoisted_64","_hoisted_65","_hoisted_66","_hoisted_67","_hoisted_68","_hoisted_69","_hoisted_70","_hoisted_71","_hoisted_72","_hoisted_73","_hoisted_74","_hoisted_75","_hoisted_76","_hoisted_77","_hoisted_78","_hoisted_79","_hoisted_80","_hoisted_81","_hoisted_82"],"mappings":"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"}